Need new GUI elements...
...string input (with allowance filters; none/boolean/math; if the current text doesn't pass the filter, show in red)



Create a custom entity handler to track all custom entities and their data, partially because it will make these things easier...
...dead entities and their respawning
...inheritance system
...general tracking of custom entities and ability to edit them

Save entities to file + data structure when dead, outside the normal MC systems



Define the GUI; if we're working with an existing, non-custom entity, highlight custom-only stuff in yellow, as well as the "Convert" button
If you press "Save" button for existing non-custom entity, and have changed custom-only settings, show a warning message
...File tab (see below)
...Main tab (parent entity, name, title, hp, armor, speed, xp, faction)
...Inventory tab (also includes drops)
...Spawning tab (home dim/position/look vector, respawn cooldown, respawn conditions <time of day, moon phase>)
...AI tab (holy crap...see below)
...Physics & Rendering tab (pathfinding type, base hitbox w/h, base render scale x/y/z, global scaling w/h, visibility, texture, draw mode, blend)
...Attributes & Potions tab

File tab
list of existing custom entities (sortable by distance <default>, name, faction, parent); always has special entries at the top (new entity)
save, load, delete buttons

AI Tab
targeting conditions (targetTasks)
combat actions (tasks, high priority) (actions, conditions <hp, cooldown>)
idle actions (tasks, low priority) (stand/look / wander (w/ option for step-up/down and area) / patrol route, animation)



Action GUI
preview of action
a series of timed nodes, each of which is...
...time
...set/add motion
...transformations (model part and one or more of... translate x/y/z, scale x/y/z, rotate x/y/z, blend r/g/b/a)
...damages (hitbox & amount for each)
...projectile spawns (texture via item or location, number, accuracy, arc, travel speed, gravity, damage, potion effects, terrain impact sound, entity impact sound)
...entity spawns
...potion effect applications
...sound effects
...commands to run



Inheritance system for stats and for other things; use "p" to signify the parent value...
...math parse for int/long/float/double eg. "p", "p * 2", "20"
...bool parse for booleans eg. "p", "!p", "true"
...string parse for strings eg. <p>, <"prefix" + p + "suffix">, <"Goblin">




Notes:
getCollisionBoundingBox() returns the entity's *solid* collision bounding box; it's generally not used for living entities, but rather for eg. boats
getEntityBoundingBox() returns the normal collision bounding box generally used for living entities



Low priority:
Look into multiple hitboxes if a situation comes up where they'd be useful...
...could be good for worm-type enemies
...might end up being a multi-entity thing rather than just a multi-hitbox thing though
